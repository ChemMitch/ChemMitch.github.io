{"version":3,"file":"commands.js","mappings":"YACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCOxBC,OAAOC,SAAQ,WACb,KAuBuB,oBAATC,KACVA,KACkB,oBAAXH,OACPA,YACkB,IAAXI,EAAAA,EACPA,EAAAA,OACAC,GAMJC,OA5BF,SAAgBC,GACd,IAAMC,EAA6C,CACjDC,KAAMR,OAAOS,aAAaC,4BAA4BC,qBACtDJ,QAAS,oBACTK,KAAM,aACNC,YAAY,GAIdb,OAAOc,QAAQC,QAAQC,KAAKC,qBAAqBC,aAAa,SAAUX,GAGxED,EAAMa,WACR,E,yBC5BA,oBAAAC,IAEA,KAAAC,UAAoB,GACpB,KAAAC,UAAoB,OAsBpB,CApBAF,EAAAG,UAAAC,yBAAA,SAAyBC,EAAiCC,QAAjC,IAAAD,IAAAA,EAAiB7B,KAAKyB,gBAAW,IAAAK,IAAAA,GAAA,GAQtD,IANA,IAIIC,EAJAC,EAAe,GAMVC,EAAI,EAAGA,EAAIJ,EAAQI,IAExBF,EAAI/B,KAAKkC,oBAAoB,EAAGC,IAChCH,GARe,6BAQAI,OAAOL,GAE1B,MAAO,GAAAM,OAAGrC,KAAK0B,WAASW,OAAGL,EAC/B,EAGAR,EAAAG,UAAAO,oBAAA,SAAoBI,EAAaC,GAC7B,OAAOC,KAAKC,UAAYF,EAAMD,GAAOA,CACvC,CACF,CAzBA,E","sources":["webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/./src/commands/commands.ts","webpack://office-addin-taskpane/./src/commands/gsrsCommands.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global global, Office, self, window */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event\n */\nfunction action(event: Office.AddinCommands.Event) {\n  const message: Office.NotificationMessageDetails = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n\nfunction getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\nconst g = getGlobal() as any;\n\n// The add-in command functions need to be available in global scope\ng.action = action;\n","export class gsrsUtilities {\r\n\r\nid_length: number = 10;\r\nid_prefix: String = \"gsrs_\";\r\n\r\ngenerateRandomIdentifier(length: number = this.id_length, foundDupe :boolean = false)\r\n{\r\n    var ident: String= \"\";\r\n    var alpha: String =\"abcdefghijklmnopqrstuvwxyz\";\r\n    //(foundDupe ) ? DateTime.Now.Millisecond+1 : DateTime.Now.Millisecond\r\n\r\n    var i: number;\r\n\r\n    for (var j = 0; j < length; j++)\r\n    {\r\n        i = this.randomNumberBetween(1, alpha.length);\r\n        ident += alpha.charAt(i);\r\n    }\r\n    return `${this.id_prefix}${ident}`;\r\n}\r\n\r\n//from https://typescript.helpful.codes/tutorials/How-to-generate-and-use-Random-Numbers/\r\nrandomNumberBetween(min: number, max: number): number {\r\n    return Math.random() * (max - min) + min;\r\n  }\r\n}\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","Office","onReady","self","global","undefined","action","event","message","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","context","mailbox","item","notificationMessages","replaceAsync","completed","gsrsUtilities","id_length","id_prefix","prototype","generateRandomIdentifier","length","foundDupe","i","ident","j","randomNumberBetween","alpha","charAt","concat","min","max","Math","random"],"sourceRoot":""}